
import openai
from llama_index import  download_loader
from urllib.parse import urlparse
from dotenv import load_dotenv
import os 
import json

load_dotenv()

openai.api_key = os.getenv("OPENAI_API_KEY")
BeautifulSoupWebReader = download_loader("BeautifulSoupWebReader")
bsl_loader = BeautifulSoupWebReader()

MAX_PROMPT_SIZE = 8000

def chat_openai(prompt, system_text="",token_limit=2048):
    """ construct an openai gpt3.5/gpt4 call

    Args:
        prompt (str): input_prompt
        system_text (str, optional): system text. Defaults to "".
        token_limit (int, optional): token limit for the api call. Defaults to 2048.

    Returns:
        output (str):  output text
    """
    chat_query = [{"role":"system", "content": system_text}, {"role":"user", "content": prompt}]

    response = openai.ChatCompletion.create(
            messages=chat_query,    
            model="gpt-4-0314",
            # model = "gpt-3.5-turbo",
            temperature=0,
            max_tokens=token_limit,
            top_p=1,
            frequency_penalty=0,
            presence_penalty=0,
            stop=' ;'
            )
    output = response["choices"][0]["message"]["content"]
    return output

def scrape_website(web_url:str):
    """
    Scrape the website for the company description

    Args:
        web_url (str): URL of the website

    Returns:
        str: Company description/summary
    """

    # BeautifulSoupWebReader = download_loader("BeautifulSoupWebReader")
    
    documents = bsl_loader.load_data(urls=[web_url])
    text_description = documents[0].text

    print(text_description)
    return text_description

def summarize_description(text_description:str):
    summarize_prompt = f'''
    Summarize the company details from the given website context. Tell us more about the company itself.
    Make a detailed summary.

    Website Context:
    {text_description[:4000]}
    '''
    system_text = "You are great at summarizing relevant information from website page data."
    chat_query = [{"role":"system", "content": system_text}, {"role":"user", "content": summarize_prompt}]
    
    web_summary = openai.ChatCompletion.create(
            messages=chat_query,    
            model="gpt-4-0314",
            #model = "gpt-3.5-turbo",
            temperature=0,
            max_tokens=2000,
            top_p=1,
            frequency_penalty=0,
            presence_penalty=0,
            stop=' ;'
            )    
    web_summary = web_summary["choices"][0]["message"]["content"]
    web_summary = str(web_summary)

    print("-------------------")
    print(web_summary)
    return web_summary



def generate_roadmap(idea:str):
    """
    Generate a roadmap for the idea selected by the user

    Args:
        idea (str): Idea selected by the user

    Returns:
        roadmap(str) : Roadmap for the idea
    """
    prompt = f"""
    Create a three phase PRD and roadmap for the following product: {idea}
    Each phase has its own roadmap without dates. 
    Write for a well-informed, professional audience. Be detailed and lengthy. Think step-by-step. 
    Return in a format, embeddable into an HTML <div> tag.
    """


    system_prompt = 'You are a Product manager with expertise in Machine Learning, Generative AI, and Business.'

    roadmap_text = _chat_openai(prompt, system_prompt)
    return roadmap_text

def generate_ideas(summary:str, role:str):
    """
    Generate ideas for the company based on the company description

    Returns:
        list : List of ideas generated by the GPT-3 model
    """
    print("print generating prompt")
    prompt = '''
    You are an expert in Machine Learning, Generative AI, and Business.
    Present a list of 3 ways generative AI can transform my business.
    I work in a {companyRole} role at the company, keep this in mind in your response.
    It should be written as an informative business presentation, for business professional audience. Do not include an introduction or conclusion.

    Please respond with the 3 ideas in JSON format like this:

    {{
        "idea_1_title": "idea_1_description",
        "idea_2_title": "idea_2_description",
        "idea_3_title": "idea_3_description"
    }}
    
    The following describes my business:

    '''.format(companyRole=role)

    print(prompt)

    prompt += summary

    system_prompt = 'You are a really helpful product manager that understand company needs, and specialize in generative AI, so you can act as a good guide.'
    ideas = chat_openai(prompt, system_prompt, MAX_PROMPT_SIZE - (len(prompt) + len(system_prompt)))
    print(ideas)
    return ideas

